initSidebarItems({"derive":[["Properties",""]],"macro":[["classes",""],["html",""],["html_nested",""]],"mod":[["worker","Prelude module for creating worker."]],"struct":[["Classes","A set of classes."]],"trait":[["Component","Components are the basic building blocks of the UI in a Yew app. Each Component chooses how to display itself using received props and self-managed state. Components can be dynamic and interactive by declaring messages that are triggered and handled asynchronously. This async update mechanism is inspired by Elm and the actor model used in the Actix framework."],["Dispatched","This trait allows the creation of a dispatcher to an existing agent that will not send replies when messages are sent."],["Properties","Trait for building properties for a component"],["Threaded","Implements rules to register a worker in a separate thread."]],"type":[["Children","A type used for accepting children elements in Component::Properties."],["ChildrenWithProps","A type used for accepting children elements in Component::Properties and accessing their props."],["ComponentLink","Link to componentâ€™s scope for creating callbacks."],["ShouldRender","This type indicates that component should be rendered again."]]});