initSidebarItems({"enum":[["IOError","Error from the io module."]],"fn":[["cube_image_from_bytes","Deserialize the 6 images given as byte arrays into a [CPUTextureCube] using the image crate. The CPUTextureCube can then be used to create a [TextureCubeMap]."],["hdr_image_from_bytes","Deserialize the given bytes representing a hdr image into a [CPUTexture] using the image crate. The CPUTexture can then be used to create a [Texture2D] or a [TextureCubeMap] using the `new_from_equirectangular` method. Supported formats: HDR."],["image_from_bytes","Deserialize the given bytes representing an image into a [CPUTexture] using the image crate. The CPUTexture can then be used to create a [Texture2D]. Supported formats: PNG, JPEG, GIF, WebP, pnm (pbm, pgm, ppm and pam), TIFF, DDS, BMP, ICO, HDR, farbfeld. Note: If the image contains and you want to load high dynamic range (hdr) information, use [hdr_image_from_bytes] instead."]],"struct":[["Loaded","Contains the resources loaded using the Loader and/or manually inserted using the insert_bytes method. Use the remove_bytes or get_bytes function to extract the raw byte array for the loaded resource or one of the other methods to both extract and deserialize a loaded resource."],["Loader","Functionality for loading any type of resource runtime on both desktop and web."],["Loading","Convenience functionality to load some resources and, when loaded, use them to create one or more objects (for example a 3D model, a skybox, a texture etc). To get the loaded object, use the `borrow()` or `borrow_mut()` methods which returns `Some` reference to the object if loaded and `None` otherwise."],["Saver","Functionality for saving resources. Only available on desktop at the moment."]]});