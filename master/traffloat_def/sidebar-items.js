initSidebarItems({"constant":[["MAGIC_HEADER","The scenario magic header."],["SCHEMA_VERSION","The scenario schema version."]],"derive":[["CopyGetters",""],["Deserialize",""],["Getters",""],["MutGetters",""],["Serialize",""],["Setters",""],["TypedBuilder","`TypedBuilder` is not a real type - deriving it will generate a `::builder()` method on your struct that will return a compile-time checked builder. Set the fields using setters with the same name as the structâ€™s fields and call `.build()` when you are done to create your object."],["Xylem",""],["new",""]],"enum":[["AnyDef","Defines a game rule."],["AnyDefXylem","See [`AnyDefXylem`]"],["CustomizableName","A customizable name that is either a translation or a value from user input."],["Schema","The tfsave-builder schema"]],"macro":[["impl_identifiable",""]],"mod":[["atlas","Texture atlas definitions"],["building","Building definitions"],["cargo","Cargo definitions."],["catalyst","A condition or catalyst which affects the efficiency of a feature."],["crime","Crime definitions."],["curdir","Current-directory context resources."],["edge","Edge states."],["feature","Defines features of a node."],["gas","Gas definitions."],["lang","Language bundle definitions"],["liquid","Liquid definitions."],["node","Node states."],["schema",""],["skill","Skill definitions."],["time","Chronological units"],["units","Defines common units"],["vehicle","Vehicle definitions."]],"struct":[["ArcStr","A better atomically-reference counted string type."],["Config","Scalar config for the scenario."],["Scenario","Metadata for a scenario."],["State","The state of objects in a game."],["TfsaveFile","The schema for the binary save file."]],"trait":[["Context","Provides the `context` method for `Result`."],["Deserialize","A data structure that can be deserialized from any data format supported by Serde."],["Serialize","A data structure that can be serialized into any data format supported by Serde."],["TryInto","An attempted conversion that consumes `self`, which may or may not be expensive."],["Write","A trait for objects which are byte-oriented sinks."],["Xias","Blanket trait that imports all traits in this crate."],["Xylem","Implementors of this trait have a special conversion rule under the schema `Schema`."]],"type":[["Id","Identifies a definition of type `T`."],["IdString","The original string identifier of a definition."]]});