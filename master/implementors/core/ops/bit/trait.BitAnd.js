(function() {var implementors = {};
implementors["ahash"] = [{"text":"impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt;&gt; for &amp;<a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,&nbsp;</span>","synthetic":false,"types":["ahash::hash_set::AHashSet"]}];
implementors["andrew"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"andrew/shapes/rectangle/struct.Sides.html\" title=\"struct andrew::shapes::rectangle::Sides\">Sides</a>&gt; for <a class=\"struct\" href=\"andrew/shapes/rectangle/struct.Sides.html\" title=\"struct andrew::shapes::rectangle::Sides\">Sides</a>","synthetic":false,"types":["andrew::shapes::rectangle::Sides"]}];
implementors["hashbrown"] = [{"text":"impl&lt;T, S, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt;&gt; for &amp;<a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Allocator + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::HashSet"]}];
implementors["indexmap"] = [{"text":"impl&lt;T, S1, S2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S2&gt;&gt; for &amp;<a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,&nbsp;</span>","synthetic":false,"types":["indexmap::set::IndexSet"]}];
implementors["legion"] = [{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.And.html\" title=\"struct legion::query::And\">And</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::and::And"]},{"text":"impl&lt;Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Any.html\" title=\"struct legion::query::Any\">Any</a>","synthetic":false,"types":["legion::internals::query::filter::any::Any"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Any.html\" title=\"struct legion::query::Any\">Any</a>","synthetic":false,"types":["legion::internals::query::filter::any::Any"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"legion/storage/trait.Component.html\" title=\"trait legion::storage::Component\">Component</a>, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.ComponentFilter.html\" title=\"struct legion::query::ComponentFilter\">ComponentFilter</a>&lt;T&gt;","synthetic":false,"types":["legion::internals::query::filter::component::ComponentFilter"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"legion/storage/trait.Component.html\" title=\"trait legion::storage::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.ComponentFilter.html\" title=\"struct legion::query::ComponentFilter\">ComponentFilter</a>&lt;T&gt;","synthetic":false,"types":["legion::internals::query::filter::component::ComponentFilter"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"legion/storage/trait.Component.html\" title=\"trait legion::storage::Component\">Component</a>, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.ComponentChangedFilter.html\" title=\"struct legion::query::ComponentChangedFilter\">ComponentChangedFilter</a>&lt;T&gt;","synthetic":false,"types":["legion::internals::query::filter::maybe_changed::ComponentChangedFilter"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"legion/storage/trait.Component.html\" title=\"trait legion::storage::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.ComponentChangedFilter.html\" title=\"struct legion::query::ComponentChangedFilter\">ComponentChangedFilter</a>&lt;T&gt;","synthetic":false,"types":["legion::internals::query::filter::maybe_changed::ComponentChangedFilter"]},{"text":"impl&lt;'a, F, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Not.html\" title=\"struct legion::query::Not\">Not</a>&lt;F&gt;","synthetic":false,"types":["legion::internals::query::filter::not::Not"]},{"text":"impl&lt;'a, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Not.html\" title=\"struct legion::query::Not\">Not</a>&lt;F&gt;","synthetic":false,"types":["legion::internals::query::filter::not::Not"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;N, O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;N, O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>N, O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;O, P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;O, P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>O, P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;P, Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;P, Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>P, Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;Q, R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;Q, R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Q, R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;R, S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;R, S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>R, S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;S, T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;S, T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>S, T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;T, U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;T, U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T, U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;U, V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;U, V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>U, V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;V, W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;V, W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>V, W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;W, X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;W, X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>W, X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;X, Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;X, Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>X, Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;Y, Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;Y, Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Y, Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;Z, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;Z&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.Or.html\" title=\"struct legion::query::Or\">Or</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>Z<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">,)</a>&gt;","synthetic":false,"types":["legion::internals::query::filter::or::Or"]},{"text":"impl&lt;Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>","synthetic":false,"types":["legion::internals::query::filter::passthrough::Passthrough"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"legion/storage/trait.Component.html\" title=\"trait legion::storage::Component\">Component</a>, Rhs:&nbsp;ActiveFilter&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"legion/query/struct.TryComponentFilter.html\" title=\"struct legion::query::TryComponentFilter\">TryComponentFilter</a>&lt;T&gt;","synthetic":false,"types":["legion::internals::query::filter::try_component::TryComponentFilter"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"legion/storage/trait.Component.html\" title=\"trait legion::storage::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"legion/query/struct.Passthrough.html\" title=\"struct legion::query::Passthrough\">Passthrough</a>&gt; for <a class=\"struct\" href=\"legion/query/struct.TryComponentFilter.html\" title=\"struct legion::query::TryComponentFilter\">TryComponentFilter</a>&lt;T&gt;","synthetic":false,"types":["legion::internals::query::filter::try_component::TryComponentFilter"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"enum\" href=\"legion/query/enum.FilterResult.html\" title=\"enum legion::query::FilterResult\">FilterResult</a>&gt; for <a class=\"enum\" href=\"legion/query/enum.FilterResult.html\" title=\"enum legion::query::FilterResult\">FilterResult</a>","synthetic":false,"types":["legion::internals::query::filter::FilterResult"]}];
implementors["nix"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/fcntl/struct.AtFlags.html\" title=\"struct nix::fcntl::AtFlags\">AtFlags</a>&gt; for <a class=\"struct\" href=\"nix/fcntl/struct.AtFlags.html\" title=\"struct nix::fcntl::AtFlags\">AtFlags</a>","synthetic":false,"types":["nix::fcntl::AtFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/fcntl/struct.OFlag.html\" title=\"struct nix::fcntl::OFlag\">OFlag</a>&gt; for <a class=\"struct\" href=\"nix/fcntl/struct.OFlag.html\" title=\"struct nix::fcntl::OFlag\">OFlag</a>","synthetic":false,"types":["nix::fcntl::OFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/fcntl/struct.SealFlag.html\" title=\"struct nix::fcntl::SealFlag\">SealFlag</a>&gt; for <a class=\"struct\" href=\"nix/fcntl/struct.SealFlag.html\" title=\"struct nix::fcntl::SealFlag\">SealFlag</a>","synthetic":false,"types":["nix::fcntl::SealFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/fcntl/struct.FdFlag.html\" title=\"struct nix::fcntl::FdFlag\">FdFlag</a>&gt; for <a class=\"struct\" href=\"nix/fcntl/struct.FdFlag.html\" title=\"struct nix::fcntl::FdFlag\">FdFlag</a>","synthetic":false,"types":["nix::fcntl::FdFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/fcntl/struct.SpliceFFlags.html\" title=\"struct nix::fcntl::SpliceFFlags\">SpliceFFlags</a>&gt; for <a class=\"struct\" href=\"nix/fcntl/struct.SpliceFFlags.html\" title=\"struct nix::fcntl::SpliceFFlags\">SpliceFFlags</a>","synthetic":false,"types":["nix::fcntl::SpliceFFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/fcntl/struct.FallocateFlags.html\" title=\"struct nix::fcntl::FallocateFlags\">FallocateFlags</a>&gt; for <a class=\"struct\" href=\"nix/fcntl/struct.FallocateFlags.html\" title=\"struct nix::fcntl::FallocateFlags\">FallocateFlags</a>","synthetic":false,"types":["nix::fcntl::FallocateFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/kmod/struct.ModuleInitFlags.html\" title=\"struct nix::kmod::ModuleInitFlags\">ModuleInitFlags</a>&gt; for <a class=\"struct\" href=\"nix/kmod/struct.ModuleInitFlags.html\" title=\"struct nix::kmod::ModuleInitFlags\">ModuleInitFlags</a>","synthetic":false,"types":["nix::kmod::ModuleInitFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/kmod/struct.DeleteModuleFlags.html\" title=\"struct nix::kmod::DeleteModuleFlags\">DeleteModuleFlags</a>&gt; for <a class=\"struct\" href=\"nix/kmod/struct.DeleteModuleFlags.html\" title=\"struct nix::kmod::DeleteModuleFlags\">DeleteModuleFlags</a>","synthetic":false,"types":["nix::kmod::DeleteModuleFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/mount/struct.MsFlags.html\" title=\"struct nix::mount::MsFlags\">MsFlags</a>&gt; for <a class=\"struct\" href=\"nix/mount/struct.MsFlags.html\" title=\"struct nix::mount::MsFlags\">MsFlags</a>","synthetic":false,"types":["nix::mount::MsFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/mount/struct.MntFlags.html\" title=\"struct nix::mount::MntFlags\">MntFlags</a>&gt; for <a class=\"struct\" href=\"nix/mount/struct.MntFlags.html\" title=\"struct nix::mount::MntFlags\">MntFlags</a>","synthetic":false,"types":["nix::mount::MntFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/mqueue/struct.MQ_OFlag.html\" title=\"struct nix::mqueue::MQ_OFlag\">MQ_OFlag</a>&gt; for <a class=\"struct\" href=\"nix/mqueue/struct.MQ_OFlag.html\" title=\"struct nix::mqueue::MQ_OFlag\">MQ_OFlag</a>","synthetic":false,"types":["nix::mqueue::MQ_OFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/mqueue/struct.FdFlag.html\" title=\"struct nix::mqueue::FdFlag\">FdFlag</a>&gt; for <a class=\"struct\" href=\"nix/mqueue/struct.FdFlag.html\" title=\"struct nix::mqueue::FdFlag\">FdFlag</a>","synthetic":false,"types":["nix::mqueue::FdFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/net/if_/struct.InterfaceFlags.html\" title=\"struct nix::net::if_::InterfaceFlags\">InterfaceFlags</a>&gt; for <a class=\"struct\" href=\"nix/net/if_/struct.InterfaceFlags.html\" title=\"struct nix::net::if_::InterfaceFlags\">InterfaceFlags</a>","synthetic":false,"types":["nix::net::if_::InterfaceFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/poll/struct.PollFlags.html\" title=\"struct nix::poll::PollFlags\">PollFlags</a>&gt; for <a class=\"struct\" href=\"nix/poll/struct.PollFlags.html\" title=\"struct nix::poll::PollFlags\">PollFlags</a>","synthetic":false,"types":["nix::poll::PollFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sched/struct.CloneFlags.html\" title=\"struct nix::sched::CloneFlags\">CloneFlags</a>&gt; for <a class=\"struct\" href=\"nix/sched/struct.CloneFlags.html\" title=\"struct nix::sched::CloneFlags\">CloneFlags</a>","synthetic":false,"types":["nix::sched::sched_linux_like::CloneFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/epoll/struct.EpollFlags.html\" title=\"struct nix::sys::epoll::EpollFlags\">EpollFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/epoll/struct.EpollFlags.html\" title=\"struct nix::sys::epoll::EpollFlags\">EpollFlags</a>","synthetic":false,"types":["nix::sys::epoll::EpollFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/epoll/struct.EpollCreateFlags.html\" title=\"struct nix::sys::epoll::EpollCreateFlags\">EpollCreateFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/epoll/struct.EpollCreateFlags.html\" title=\"struct nix::sys::epoll::EpollCreateFlags\">EpollCreateFlags</a>","synthetic":false,"types":["nix::sys::epoll::EpollCreateFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/eventfd/struct.EfdFlags.html\" title=\"struct nix::sys::eventfd::EfdFlags\">EfdFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/eventfd/struct.EfdFlags.html\" title=\"struct nix::sys::eventfd::EfdFlags\">EfdFlags</a>","synthetic":false,"types":["nix::sys::eventfd::EfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/memfd/struct.MemFdCreateFlag.html\" title=\"struct nix::sys::memfd::MemFdCreateFlag\">MemFdCreateFlag</a>&gt; for <a class=\"struct\" href=\"nix/sys/memfd/struct.MemFdCreateFlag.html\" title=\"struct nix::sys::memfd::MemFdCreateFlag\">MemFdCreateFlag</a>","synthetic":false,"types":["nix::sys::memfd::MemFdCreateFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/mman/struct.ProtFlags.html\" title=\"struct nix::sys::mman::ProtFlags\">ProtFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/mman/struct.ProtFlags.html\" title=\"struct nix::sys::mman::ProtFlags\">ProtFlags</a>","synthetic":false,"types":["nix::sys::mman::ProtFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/mman/struct.MapFlags.html\" title=\"struct nix::sys::mman::MapFlags\">MapFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/mman/struct.MapFlags.html\" title=\"struct nix::sys::mman::MapFlags\">MapFlags</a>","synthetic":false,"types":["nix::sys::mman::MapFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/mman/struct.MRemapFlags.html\" title=\"struct nix::sys::mman::MRemapFlags\">MRemapFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/mman/struct.MRemapFlags.html\" title=\"struct nix::sys::mman::MRemapFlags\">MRemapFlags</a>","synthetic":false,"types":["nix::sys::mman::MRemapFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/mman/struct.MsFlags.html\" title=\"struct nix::sys::mman::MsFlags\">MsFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/mman/struct.MsFlags.html\" title=\"struct nix::sys::mman::MsFlags\">MsFlags</a>","synthetic":false,"types":["nix::sys::mman::MsFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/mman/struct.MlockAllFlags.html\" title=\"struct nix::sys::mman::MlockAllFlags\">MlockAllFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/mman/struct.MlockAllFlags.html\" title=\"struct nix::sys::mman::MlockAllFlags\">MlockAllFlags</a>","synthetic":false,"types":["nix::sys::mman::MlockAllFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/personality/struct.Persona.html\" title=\"struct nix::sys::personality::Persona\">Persona</a>&gt; for <a class=\"struct\" href=\"nix/sys/personality/struct.Persona.html\" title=\"struct nix::sys::personality::Persona\">Persona</a>","synthetic":false,"types":["nix::sys::personality::Persona"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/ptrace/struct.Options.html\" title=\"struct nix::sys::ptrace::Options\">Options</a>&gt; for <a class=\"struct\" href=\"nix/sys/ptrace/struct.Options.html\" title=\"struct nix::sys::ptrace::Options\">Options</a>","synthetic":false,"types":["nix::sys::ptrace::linux::Options"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/quota/struct.QuotaValidFlags.html\" title=\"struct nix::sys::quota::QuotaValidFlags\">QuotaValidFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/quota/struct.QuotaValidFlags.html\" title=\"struct nix::sys::quota::QuotaValidFlags\">QuotaValidFlags</a>","synthetic":false,"types":["nix::sys::quota::QuotaValidFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/signal/struct.SaFlags.html\" title=\"struct nix::sys::signal::SaFlags\">SaFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/signal/struct.SaFlags.html\" title=\"struct nix::sys::signal::SaFlags\">SaFlags</a>","synthetic":false,"types":["nix::sys::signal::SaFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/signalfd/struct.SfdFlags.html\" title=\"struct nix::sys::signalfd::SfdFlags\">SfdFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/signalfd/struct.SfdFlags.html\" title=\"struct nix::sys::signalfd::SfdFlags\">SfdFlags</a>","synthetic":false,"types":["nix::sys::signalfd::SfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/socket/struct.SockFlag.html\" title=\"struct nix::sys::socket::SockFlag\">SockFlag</a>&gt; for <a class=\"struct\" href=\"nix/sys/socket/struct.SockFlag.html\" title=\"struct nix::sys::socket::SockFlag\">SockFlag</a>","synthetic":false,"types":["nix::sys::socket::SockFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/socket/struct.MsgFlags.html\" title=\"struct nix::sys::socket::MsgFlags\">MsgFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/socket/struct.MsgFlags.html\" title=\"struct nix::sys::socket::MsgFlags\">MsgFlags</a>","synthetic":false,"types":["nix::sys::socket::MsgFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/stat/struct.SFlag.html\" title=\"struct nix::sys::stat::SFlag\">SFlag</a>&gt; for <a class=\"struct\" href=\"nix/sys/stat/struct.SFlag.html\" title=\"struct nix::sys::stat::SFlag\">SFlag</a>","synthetic":false,"types":["nix::sys::stat::SFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/stat/struct.Mode.html\" title=\"struct nix::sys::stat::Mode\">Mode</a>&gt; for <a class=\"struct\" href=\"nix/sys/stat/struct.Mode.html\" title=\"struct nix::sys::stat::Mode\">Mode</a>","synthetic":false,"types":["nix::sys::stat::Mode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/statvfs/struct.FsFlags.html\" title=\"struct nix::sys::statvfs::FsFlags\">FsFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/statvfs/struct.FsFlags.html\" title=\"struct nix::sys::statvfs::FsFlags\">FsFlags</a>","synthetic":false,"types":["nix::sys::statvfs::FsFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/termios/struct.InputFlags.html\" title=\"struct nix::sys::termios::InputFlags\">InputFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/termios/struct.InputFlags.html\" title=\"struct nix::sys::termios::InputFlags\">InputFlags</a>","synthetic":false,"types":["nix::sys::termios::InputFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/termios/struct.OutputFlags.html\" title=\"struct nix::sys::termios::OutputFlags\">OutputFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/termios/struct.OutputFlags.html\" title=\"struct nix::sys::termios::OutputFlags\">OutputFlags</a>","synthetic":false,"types":["nix::sys::termios::OutputFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/termios/struct.ControlFlags.html\" title=\"struct nix::sys::termios::ControlFlags\">ControlFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/termios/struct.ControlFlags.html\" title=\"struct nix::sys::termios::ControlFlags\">ControlFlags</a>","synthetic":false,"types":["nix::sys::termios::ControlFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/termios/struct.LocalFlags.html\" title=\"struct nix::sys::termios::LocalFlags\">LocalFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/termios/struct.LocalFlags.html\" title=\"struct nix::sys::termios::LocalFlags\">LocalFlags</a>","synthetic":false,"types":["nix::sys::termios::LocalFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/wait/struct.WaitPidFlag.html\" title=\"struct nix::sys::wait::WaitPidFlag\">WaitPidFlag</a>&gt; for <a class=\"struct\" href=\"nix/sys/wait/struct.WaitPidFlag.html\" title=\"struct nix::sys::wait::WaitPidFlag\">WaitPidFlag</a>","synthetic":false,"types":["nix::sys::wait::WaitPidFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/inotify/struct.AddWatchFlags.html\" title=\"struct nix::sys::inotify::AddWatchFlags\">AddWatchFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/inotify/struct.AddWatchFlags.html\" title=\"struct nix::sys::inotify::AddWatchFlags\">AddWatchFlags</a>","synthetic":false,"types":["nix::sys::inotify::AddWatchFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/inotify/struct.InitFlags.html\" title=\"struct nix::sys::inotify::InitFlags\">InitFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/inotify/struct.InitFlags.html\" title=\"struct nix::sys::inotify::InitFlags\">InitFlags</a>","synthetic":false,"types":["nix::sys::inotify::InitFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/timerfd/struct.TimerFlags.html\" title=\"struct nix::sys::timerfd::TimerFlags\">TimerFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/timerfd/struct.TimerFlags.html\" title=\"struct nix::sys::timerfd::TimerFlags\">TimerFlags</a>","synthetic":false,"types":["nix::sys::timerfd::TimerFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/sys/timerfd/struct.TimerSetTimeFlags.html\" title=\"struct nix::sys::timerfd::TimerSetTimeFlags\">TimerSetTimeFlags</a>&gt; for <a class=\"struct\" href=\"nix/sys/timerfd/struct.TimerSetTimeFlags.html\" title=\"struct nix::sys::timerfd::TimerSetTimeFlags\">TimerSetTimeFlags</a>","synthetic":false,"types":["nix::sys::timerfd::TimerSetTimeFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"nix/unistd/struct.AccessFlags.html\" title=\"struct nix::unistd::AccessFlags\">AccessFlags</a>&gt; for <a class=\"struct\" href=\"nix/unistd/struct.AccessFlags.html\" title=\"struct nix::unistd::AccessFlags\">AccessFlags</a>","synthetic":false,"types":["nix::unistd::AccessFlags"]}];
implementors["openssl"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/cms/struct.CMSOptions.html\" title=\"struct openssl::cms::CMSOptions\">CMSOptions</a>&gt; for <a class=\"struct\" href=\"openssl/cms/struct.CMSOptions.html\" title=\"struct openssl::cms::CMSOptions\">CMSOptions</a>","synthetic":false,"types":["openssl::cms::CMSOptions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/ocsp/struct.OcspFlag.html\" title=\"struct openssl::ocsp::OcspFlag\">OcspFlag</a>&gt; for <a class=\"struct\" href=\"openssl/ocsp/struct.OcspFlag.html\" title=\"struct openssl::ocsp::OcspFlag\">OcspFlag</a>","synthetic":false,"types":["openssl::ocsp::OcspFlag"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7Flags.html\" title=\"struct openssl::pkcs7::Pkcs7Flags\">Pkcs7Flags</a>&gt; for <a class=\"struct\" href=\"openssl/pkcs7/struct.Pkcs7Flags.html\" title=\"struct openssl::pkcs7::Pkcs7Flags\">Pkcs7Flags</a>","synthetic":false,"types":["openssl::pkcs7::Pkcs7Flags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.SslOptions.html\" title=\"struct openssl::ssl::SslOptions\">SslOptions</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.SslOptions.html\" title=\"struct openssl::ssl::SslOptions\">SslOptions</a>","synthetic":false,"types":["openssl::ssl::SslOptions"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.SslMode.html\" title=\"struct openssl::ssl::SslMode\">SslMode</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.SslMode.html\" title=\"struct openssl::ssl::SslMode\">SslMode</a>","synthetic":false,"types":["openssl::ssl::SslMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.SslVerifyMode.html\" title=\"struct openssl::ssl::SslVerifyMode\">SslVerifyMode</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.SslVerifyMode.html\" title=\"struct openssl::ssl::SslVerifyMode\">SslVerifyMode</a>","synthetic":false,"types":["openssl::ssl::SslVerifyMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.SslSessionCacheMode.html\" title=\"struct openssl::ssl::SslSessionCacheMode\">SslSessionCacheMode</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.SslSessionCacheMode.html\" title=\"struct openssl::ssl::SslSessionCacheMode\">SslSessionCacheMode</a>","synthetic":false,"types":["openssl::ssl::SslSessionCacheMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.ExtensionContext.html\" title=\"struct openssl::ssl::ExtensionContext\">ExtensionContext</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.ExtensionContext.html\" title=\"struct openssl::ssl::ExtensionContext\">ExtensionContext</a>","synthetic":false,"types":["openssl::ssl::ExtensionContext"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/ssl/struct.ShutdownState.html\" title=\"struct openssl::ssl::ShutdownState\">ShutdownState</a>&gt; for <a class=\"struct\" href=\"openssl/ssl/struct.ShutdownState.html\" title=\"struct openssl::ssl::ShutdownState\">ShutdownState</a>","synthetic":false,"types":["openssl::ssl::ShutdownState"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/x509/verify/struct.X509CheckFlags.html\" title=\"struct openssl::x509::verify::X509CheckFlags\">X509CheckFlags</a>&gt; for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509CheckFlags.html\" title=\"struct openssl::x509::verify::X509CheckFlags\">X509CheckFlags</a>","synthetic":false,"types":["openssl::x509::verify::X509CheckFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyFlags.html\" title=\"struct openssl::x509::verify::X509VerifyFlags\">X509VerifyFlags</a>&gt; for <a class=\"struct\" href=\"openssl/x509/verify/struct.X509VerifyFlags.html\" title=\"struct openssl::x509::verify::X509VerifyFlags\">X509VerifyFlags</a>","synthetic":false,"types":["openssl::x509::verify::X509VerifyFlags"]}];
implementors["png"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"png/struct.Transformations.html\" title=\"struct png::Transformations\">Transformations</a>&gt; for <a class=\"struct\" href=\"png/struct.Transformations.html\" title=\"struct png::Transformations\">Transformations</a>","synthetic":false,"types":["png::common::Transformations"]}];
implementors["safe_arch"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"safe_arch/struct.m128.html\" title=\"struct safe_arch::m128\">m128</a>&gt; for <a class=\"struct\" href=\"safe_arch/struct.m128.html\" title=\"struct safe_arch::m128\">m128</a>","synthetic":false,"types":["safe_arch::x86_x64::m128_::m128"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"safe_arch/struct.m128d.html\" title=\"struct safe_arch::m128d\">m128d</a>&gt; for <a class=\"struct\" href=\"safe_arch/struct.m128d.html\" title=\"struct safe_arch::m128d\">m128d</a>","synthetic":false,"types":["safe_arch::x86_x64::m128d_::m128d"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"safe_arch/struct.m128i.html\" title=\"struct safe_arch::m128i\">m128i</a>&gt; for <a class=\"struct\" href=\"safe_arch/struct.m128i.html\" title=\"struct safe_arch::m128i\">m128i</a>","synthetic":false,"types":["safe_arch::x86_x64::m128i_::m128i"]}];
implementors["simba"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 1]</a>&gt;&gt; for <a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 1]</a>&gt;","synthetic":false,"types":["simba::simd::auto_simd_impl::AutoSimd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 2]</a>&gt;&gt; for <a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 2]</a>&gt;","synthetic":false,"types":["simba::simd::auto_simd_impl::AutoSimd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 4]</a>&gt;&gt; for <a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 4]</a>&gt;","synthetic":false,"types":["simba::simd::auto_simd_impl::AutoSimd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 8]</a>&gt;&gt; for <a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 8]</a>&gt;","synthetic":false,"types":["simba::simd::auto_simd_impl::AutoSimd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 16]</a>&gt;&gt; for <a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 16]</a>&gt;","synthetic":false,"types":["simba::simd::auto_simd_impl::AutoSimd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 32]</a>&gt;&gt; for <a class=\"struct\" href=\"simba/simd/struct.AutoSimd.html\" title=\"struct simba::simd::AutoSimd\">AutoSimd</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; 32]</a>&gt;","synthetic":false,"types":["simba::simd::auto_simd_impl::AutoSimd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"simba/simd/struct.WideBoolF32x4.html\" title=\"struct simba::simd::WideBoolF32x4\">WideBoolF32x4</a>&gt; for <a class=\"struct\" href=\"simba/simd/struct.WideBoolF32x4.html\" title=\"struct simba::simd::WideBoolF32x4\">WideBoolF32x4</a>","synthetic":false,"types":["simba::simd::wide_simd_impl::WideBoolF32x4"]}];
implementors["tokio"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>&gt; for <a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>","synthetic":false,"types":["tokio::io::driver::ready::Ready"]}];
implementors["typenum"] = [{"text":"impl&lt;Rhs:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":false,"types":["typenum::bit::B0"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":false,"types":["typenum::bit::B1"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":false,"types":["typenum::bit::B1"]},{"text":"impl&lt;Ur:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Ur&gt; for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":false,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;Ul:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>, Bl:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>, Ur:&nbsp;<a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;Ur&gt; for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;Ul, Bl&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;Ul, Bl&gt;: PrivateAnd&lt;Ur&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;PrivateAndOut&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;Ul, Bl&gt;, Ur&gt;: Trim,&nbsp;</span>","synthetic":false,"types":["typenum::uint::UInt"]}];
implementors["wayland_client"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_client/protocol/wl_data_device_manager/struct.DndAction.html\" title=\"struct wayland_client::protocol::wl_data_device_manager::DndAction\">DndAction</a>&gt; for <a class=\"struct\" href=\"wayland_client/protocol/wl_data_device_manager/struct.DndAction.html\" title=\"struct wayland_client::protocol::wl_data_device_manager::DndAction\">DndAction</a>","synthetic":false,"types":["wayland_client::protocol::wl_data_device_manager::DndAction"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_client/protocol/wl_shell_surface/struct.Resize.html\" title=\"struct wayland_client::protocol::wl_shell_surface::Resize\">Resize</a>&gt; for <a class=\"struct\" href=\"wayland_client/protocol/wl_shell_surface/struct.Resize.html\" title=\"struct wayland_client::protocol::wl_shell_surface::Resize\">Resize</a>","synthetic":false,"types":["wayland_client::protocol::wl_shell_surface::Resize"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_client/protocol/wl_shell_surface/struct.Transient.html\" title=\"struct wayland_client::protocol::wl_shell_surface::Transient\">Transient</a>&gt; for <a class=\"struct\" href=\"wayland_client/protocol/wl_shell_surface/struct.Transient.html\" title=\"struct wayland_client::protocol::wl_shell_surface::Transient\">Transient</a>","synthetic":false,"types":["wayland_client::protocol::wl_shell_surface::Transient"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_client/protocol/wl_seat/struct.Capability.html\" title=\"struct wayland_client::protocol::wl_seat::Capability\">Capability</a>&gt; for <a class=\"struct\" href=\"wayland_client/protocol/wl_seat/struct.Capability.html\" title=\"struct wayland_client::protocol::wl_seat::Capability\">Capability</a>","synthetic":false,"types":["wayland_client::protocol::wl_seat::Capability"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_client/protocol/wl_output/struct.Mode.html\" title=\"struct wayland_client::protocol::wl_output::Mode\">Mode</a>&gt; for <a class=\"struct\" href=\"wayland_client/protocol/wl_output/struct.Mode.html\" title=\"struct wayland_client::protocol::wl_output::Mode\">Mode</a>","synthetic":false,"types":["wayland_client::protocol::wl_output::Mode"]}];
implementors["wayland_protocols"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_protocols/unstable/text_input/v3/client/zwp_text_input_v3/struct.ContentHint.html\" title=\"struct wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::ContentHint\">ContentHint</a>&gt; for <a class=\"struct\" href=\"wayland_protocols/unstable/text_input/v3/client/zwp_text_input_v3/struct.ContentHint.html\" title=\"struct wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::ContentHint\">ContentHint</a>","synthetic":false,"types":["wayland_protocols::unstable::text_input::v3::generated::client::zwp_text_input_v3::ContentHint"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_protocols/unstable/xdg_shell/v6/client/zxdg_positioner_v6/struct.Anchor.html\" title=\"struct wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Anchor\">Anchor</a>&gt; for <a class=\"struct\" href=\"wayland_protocols/unstable/xdg_shell/v6/client/zxdg_positioner_v6/struct.Anchor.html\" title=\"struct wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Anchor\">Anchor</a>","synthetic":false,"types":["wayland_protocols::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Anchor"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_protocols/unstable/xdg_shell/v6/client/zxdg_positioner_v6/struct.Gravity.html\" title=\"struct wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Gravity\">Gravity</a>&gt; for <a class=\"struct\" href=\"wayland_protocols/unstable/xdg_shell/v6/client/zxdg_positioner_v6/struct.Gravity.html\" title=\"struct wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Gravity\">Gravity</a>","synthetic":false,"types":["wayland_protocols::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::Gravity"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_protocols/unstable/xdg_shell/v6/client/zxdg_positioner_v6/struct.ConstraintAdjustment.html\" title=\"struct wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::ConstraintAdjustment\">ConstraintAdjustment</a>&gt; for <a class=\"struct\" href=\"wayland_protocols/unstable/xdg_shell/v6/client/zxdg_positioner_v6/struct.ConstraintAdjustment.html\" title=\"struct wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::ConstraintAdjustment\">ConstraintAdjustment</a>","synthetic":false,"types":["wayland_protocols::unstable::xdg_shell::v6::generated::client::zxdg_positioner_v6::ConstraintAdjustment"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_protocols/wlr/unstable/layer_shell/v1/client/zwlr_layer_surface_v1/struct.Anchor.html\" title=\"struct wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Anchor\">Anchor</a>&gt; for <a class=\"struct\" href=\"wayland_protocols/wlr/unstable/layer_shell/v1/client/zwlr_layer_surface_v1/struct.Anchor.html\" title=\"struct wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Anchor\">Anchor</a>","synthetic":false,"types":["wayland_protocols::wlr::unstable::layer_shell::v1::generated::client::zwlr_layer_surface_v1::Anchor"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_protocols/wlr/unstable/screencopy/v1/client/zwlr_screencopy_frame_v1/struct.Flags.html\" title=\"struct wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Flags\">Flags</a>&gt; for <a class=\"struct\" href=\"wayland_protocols/wlr/unstable/screencopy/v1/client/zwlr_screencopy_frame_v1/struct.Flags.html\" title=\"struct wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Flags\">Flags</a>","synthetic":false,"types":["wayland_protocols::wlr::unstable::screencopy::v1::generated::client::zwlr_screencopy_frame_v1::Flags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_protocols/presentation_time/client/wp_presentation_feedback/struct.Kind.html\" title=\"struct wayland_protocols::presentation_time::client::wp_presentation_feedback::Kind\">Kind</a>&gt; for <a class=\"struct\" href=\"wayland_protocols/presentation_time/client/wp_presentation_feedback/struct.Kind.html\" title=\"struct wayland_protocols::presentation_time::client::wp_presentation_feedback::Kind\">Kind</a>","synthetic":false,"types":["wayland_protocols::stable::presentation_time::generated::client::wp_presentation_feedback::Kind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wayland_protocols/xdg_shell/client/xdg_positioner/struct.ConstraintAdjustment.html\" title=\"struct wayland_protocols::xdg_shell::client::xdg_positioner::ConstraintAdjustment\">ConstraintAdjustment</a>&gt; for <a class=\"struct\" href=\"wayland_protocols/xdg_shell/client/xdg_positioner/struct.ConstraintAdjustment.html\" title=\"struct wayland_protocols::xdg_shell::client::xdg_positioner::ConstraintAdjustment\">ConstraintAdjustment</a>","synthetic":false,"types":["wayland_protocols::stable::xdg_shell::generated::client::xdg_positioner::ConstraintAdjustment"]}];
implementors["wide"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.f32x8.html\" title=\"struct wide::f32x8\">f32x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.f32x8.html\" title=\"struct wide::f32x8\">f32x8</a>","synthetic":false,"types":["wide::f32x8_::f32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.f32x4.html\" title=\"struct wide::f32x4\">f32x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.f32x4.html\" title=\"struct wide::f32x4\">f32x4</a>","synthetic":false,"types":["wide::f32x4_::f32x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.f64x4.html\" title=\"struct wide::f64x4\">f64x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.f64x4.html\" title=\"struct wide::f64x4\">f64x4</a>","synthetic":false,"types":["wide::f64x4_::f64x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.f64x2.html\" title=\"struct wide::f64x2\">f64x2</a>&gt; for <a class=\"struct\" href=\"wide/struct.f64x2.html\" title=\"struct wide::f64x2\">f64x2</a>","synthetic":false,"types":["wide::f64x2_::f64x2"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.i8x16.html\" title=\"struct wide::i8x16\">i8x16</a>&gt; for <a class=\"struct\" href=\"wide/struct.i8x16.html\" title=\"struct wide::i8x16\">i8x16</a>","synthetic":false,"types":["wide::i8x16_::i8x16"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.i16x16.html\" title=\"struct wide::i16x16\">i16x16</a>&gt; for <a class=\"struct\" href=\"wide/struct.i16x16.html\" title=\"struct wide::i16x16\">i16x16</a>","synthetic":false,"types":["wide::i16x16_::i16x16"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.i8x32.html\" title=\"struct wide::i8x32\">i8x32</a>&gt; for <a class=\"struct\" href=\"wide/struct.i8x32.html\" title=\"struct wide::i8x32\">i8x32</a>","synthetic":false,"types":["wide::i8x32_::i8x32"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.i16x8.html\" title=\"struct wide::i16x8\">i16x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.i16x8.html\" title=\"struct wide::i16x8\">i16x8</a>","synthetic":false,"types":["wide::i16x8_::i16x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.i32x4.html\" title=\"struct wide::i32x4\">i32x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.i32x4.html\" title=\"struct wide::i32x4\">i32x4</a>","synthetic":false,"types":["wide::i32x4_::i32x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.i32x8.html\" title=\"struct wide::i32x8\">i32x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.i32x8.html\" title=\"struct wide::i32x8\">i32x8</a>","synthetic":false,"types":["wide::i32x8_::i32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.i64x2.html\" title=\"struct wide::i64x2\">i64x2</a>&gt; for <a class=\"struct\" href=\"wide/struct.i64x2.html\" title=\"struct wide::i64x2\">i64x2</a>","synthetic":false,"types":["wide::i64x2_::i64x2"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.i64x4.html\" title=\"struct wide::i64x4\">i64x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.i64x4.html\" title=\"struct wide::i64x4\">i64x4</a>","synthetic":false,"types":["wide::i64x4_::i64x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.u8x16.html\" title=\"struct wide::u8x16\">u8x16</a>&gt; for <a class=\"struct\" href=\"wide/struct.u8x16.html\" title=\"struct wide::u8x16\">u8x16</a>","synthetic":false,"types":["wide::u8x16_::u8x16"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.u16x8.html\" title=\"struct wide::u16x8\">u16x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.u16x8.html\" title=\"struct wide::u16x8\">u16x8</a>","synthetic":false,"types":["wide::u16x8_::u16x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.u32x4.html\" title=\"struct wide::u32x4\">u32x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.u32x4.html\" title=\"struct wide::u32x4\">u32x4</a>","synthetic":false,"types":["wide::u32x4_::u32x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.u32x8.html\" title=\"struct wide::u32x8\">u32x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.u32x8.html\" title=\"struct wide::u32x8\">u32x8</a>","synthetic":false,"types":["wide::u32x8_::u32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.u64x2.html\" title=\"struct wide::u64x2\">u64x2</a>&gt; for <a class=\"struct\" href=\"wide/struct.u64x2.html\" title=\"struct wide::u64x2\">u64x2</a>","synthetic":false,"types":["wide::u64x2_::u64x2"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"wide/struct.u64x4.html\" title=\"struct wide::u64x4\">u64x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.u64x4.html\" title=\"struct wide::u64x4\">u64x4</a>","synthetic":false,"types":["wide::u64x4_::u64x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.f32x8.html\" title=\"struct wide::f32x8\">f32x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.f32x8.html\" title=\"struct wide::f32x8\">f32x8</a>","synthetic":false,"types":["wide::f32x8_::f32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.f32x4.html\" title=\"struct wide::f32x4\">f32x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.f32x4.html\" title=\"struct wide::f32x4\">f32x4</a>","synthetic":false,"types":["wide::f32x4_::f32x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.f64x4.html\" title=\"struct wide::f64x4\">f64x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.f64x4.html\" title=\"struct wide::f64x4\">f64x4</a>","synthetic":false,"types":["wide::f64x4_::f64x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.f64x2.html\" title=\"struct wide::f64x2\">f64x2</a>&gt; for <a class=\"struct\" href=\"wide/struct.f64x2.html\" title=\"struct wide::f64x2\">f64x2</a>","synthetic":false,"types":["wide::f64x2_::f64x2"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.i8x32.html\" title=\"struct wide::i8x32\">i8x32</a>&gt; for <a class=\"struct\" href=\"wide/struct.i8x32.html\" title=\"struct wide::i8x32\">i8x32</a>","synthetic":false,"types":["wide::i8x32_::i8x32"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.i8x16.html\" title=\"struct wide::i8x16\">i8x16</a>&gt; for <a class=\"struct\" href=\"wide/struct.i8x16.html\" title=\"struct wide::i8x16\">i8x16</a>","synthetic":false,"types":["wide::i8x16_::i8x16"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.i16x8.html\" title=\"struct wide::i16x8\">i16x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.i16x8.html\" title=\"struct wide::i16x8\">i16x8</a>","synthetic":false,"types":["wide::i16x8_::i16x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.i16x16.html\" title=\"struct wide::i16x16\">i16x16</a>&gt; for <a class=\"struct\" href=\"wide/struct.i16x16.html\" title=\"struct wide::i16x16\">i16x16</a>","synthetic":false,"types":["wide::i16x16_::i16x16"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.i32x8.html\" title=\"struct wide::i32x8\">i32x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.i32x8.html\" title=\"struct wide::i32x8\">i32x8</a>","synthetic":false,"types":["wide::i32x8_::i32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.i32x4.html\" title=\"struct wide::i32x4\">i32x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.i32x4.html\" title=\"struct wide::i32x4\">i32x4</a>","synthetic":false,"types":["wide::i32x4_::i32x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.i64x2.html\" title=\"struct wide::i64x2\">i64x2</a>&gt; for <a class=\"struct\" href=\"wide/struct.i64x2.html\" title=\"struct wide::i64x2\">i64x2</a>","synthetic":false,"types":["wide::i64x2_::i64x2"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.u8x16.html\" title=\"struct wide::u8x16\">u8x16</a>&gt; for <a class=\"struct\" href=\"wide/struct.u8x16.html\" title=\"struct wide::u8x16\">u8x16</a>","synthetic":false,"types":["wide::u8x16_::u8x16"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.u16x8.html\" title=\"struct wide::u16x8\">u16x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.u16x8.html\" title=\"struct wide::u16x8\">u16x8</a>","synthetic":false,"types":["wide::u16x8_::u16x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.u32x8.html\" title=\"struct wide::u32x8\">u32x8</a>&gt; for <a class=\"struct\" href=\"wide/struct.u32x8.html\" title=\"struct wide::u32x8\">u32x8</a>","synthetic":false,"types":["wide::u32x8_::u32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.u32x4.html\" title=\"struct wide::u32x4\">u32x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.u32x4.html\" title=\"struct wide::u32x4\">u32x4</a>","synthetic":false,"types":["wide::u32x4_::u32x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.u64x4.html\" title=\"struct wide::u64x4\">u64x4</a>&gt; for <a class=\"struct\" href=\"wide/struct.u64x4.html\" title=\"struct wide::u64x4\">u64x4</a>","synthetic":false,"types":["wide::u64x4_::u64x4"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;'_ <a class=\"struct\" href=\"wide/struct.u64x2.html\" title=\"struct wide::u64x2\">u64x2</a>&gt; for <a class=\"struct\" href=\"wide/struct.u64x2.html\" title=\"struct wide::u64x2\">u64x2</a>","synthetic":false,"types":["wide::u64x2_::u64x2"]}];
implementors["winit"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"winit/event/struct.ModifiersState.html\" title=\"struct winit::event::ModifiersState\">ModifiersState</a>&gt; for <a class=\"struct\" href=\"winit/event/struct.ModifiersState.html\" title=\"struct winit::event::ModifiersState\">ModifiersState</a>","synthetic":false,"types":["winit::event::ModifiersState"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()